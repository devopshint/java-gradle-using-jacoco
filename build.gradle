plugins {
    id 'java'
    id 'jacoco'
   
}

group 'com.madrapps'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
   
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion '0.8.0'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

tasks.create(name: "testCoverage", type: JacocoReport, dependsOn: "test") {

    group = "Reporting"
    description = "Generate Jacoco coverage reports for the test build."

    reports {
        html.enabled = true
        xml.enabled = true
    }

    def excludes = [
            '**/*Test*.*',
            '**/actions/*.*',
            '**/core/*.*',
            '**/markers/*.*',
            '**/services/**/*.*',
            '**/toolwindow/*.*',
            '**/utils/*.*'
    ]

    def javaClasses = fileTree(dir: "${buildDir}/classes/java/main", excludes: excludes)
    
    classDirectories.from = files([javaClasses])

   

    sourceDirectories.from = files([
            "$project.projectDir/src/main/java",
            "$buildDir/generated/source/kapt/test"
    ])

    executionData.from = files("${project.buildDir}/jacoco/test.exec")
}
